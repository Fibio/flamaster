// Generated by CoffeeScript 1.3.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

define(['chaplin/model'], function(Model) {
  'use strict';

  var User;
  return User = (function(_super) {

    __extends(User, _super);

    User.name = 'User';

    function User() {
      return User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.emailRegex = /^([a-zA-Z0-9_\.\-])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;

    User.prototype.defaults = {
      email: ''
    };

    User.prototype.initialize = function() {
      return console.log("User#initialize", this.urlRoot);
    };

    User.prototype.validate = function(attrs) {
      var response;
      response = {
        status: 'success'
      };
      if (!this.emailRegex.test(attrs.email)) {
        response = {
          status: 'failed',
          email: 'This is not valid email address'
        };
      }
      return response.status !== 'success' && response || null;
    };

    return User;

  })(Model);
});

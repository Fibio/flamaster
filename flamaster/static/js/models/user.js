// Generated by CoffeeScript 1.3.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

define(['chaplin/mediator', 'models/base_user'], function(mediator, BaseUser) {
  'use strict';

  var User;
  return User = (function(_super) {

    __extends(User, _super);

    User.name = 'User';

    function User() {
      return User.__super__.constructor.apply(this, arguments);
    }

    User.prototype.urlRoot = '/account/profiles/';

    User.prototype.validate = function(attrs) {
      var attr, response, _i, _len, _ref;
      response = {
        status: 'success'
      };
      _ref = ['first_name', 'last_name', 'phone'];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        attr = _ref[_i];
        if (attrs[attr].length === 0) {
          response.status = 'failed';
          response[attr] = "Can't be zero-length";
        }
      }
      if (attrs.password.length < 6) {
        _(response).extend({
          status: 'failed',
          password: "Password should be more than 5 symbols"
        });
      }
      if (attrs.password.length && (attrs.password !== attrs.password_confirm)) {
        _(response).extend({
          status: 'failed',
          password: "Password and confirmation don't match"
        });
      }
      return response.status !== 'success' && response || null;
    };

    return User;

  })(BaseUser);
});

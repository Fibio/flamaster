// Generated by CoffeeScript 1.3.1
var __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor; child.__super__ = parent.prototype; return child; };

define(['chaplin/controller', 'models/base_user', 'views/signup_view', 'views/dashboard_view', 'views/activation_view'], function(Controller, BaseUser, SignUpView, DashboardView, ActivationView) {
  'use strict';

  var PageController;
  return PageController = (function(_super) {

    __extends(PageController, _super);

    PageController.name = 'PageController';

    function PageController() {
      return PageController.__super__.constructor.apply(this, arguments);
    }

    PageController.prototype.historyURL = function(options) {
      console.log("PageController#historyURL", options);
      return options.path || '';
    };

    PageController.prototype.index = function() {
      return this.view = new DashboardView;
    };

    PageController.prototype.signup = function() {
      return this.view = new SignUpView({
        model: new BaseUser
      });
    };

    PageController.prototype.dashboard = function() {
      return this.view = new DashboardView;
    };

    PageController.prototype.activate = function() {
      var options, _ref;
      options = {};
      if (!((_ref = window.context) != null ? _ref.user : void 0)) {
        options.template = 'some_template';
      }
      return this.view = new ActivationView(options);
    };

    return PageController;

  })(Controller);
});
